Operation process
=================

The Bulk API lets you query, insert, update, upsert, or delete a large number of records asynchronously.

All operations use HTTP GET or POST methods to send and receive XML or CSV data.

How Bulk API works
------------------

You process a set of records by creating a **job that contains one or more batches**. The **job specifies which object is being processed and what type of action is being used** (query, insert, upsert, update, or delete). A job is represented by the **JobInfo** resource. This resource is used to create a new job, get status for an existing job, and change status for a job. A **batch is a set of records sent to the server**. You first send a number of batches to the server using an HTTP POST request and then the server processes the batches in the background. A batch is created by submitting a CSV or XML representation of a set of records and any references to binary attachment. Once created, the status of a batch is represented by a **BatchInfo** resource.  Each batch is processed independently by the server, not necessarily in the order it is received. While batches are being processed, you can track progress by checking the status of the job using an HTTP GET call. When a batch is complete, the result for each record is available in a result set resource.


sfbulk implementation
---------------------

#. Initialize bulk.

    .. code-block:: python

        from sfbulk import Bulk

        bulk = Bulk()

#. Authorize bulk.

    Before performing any operations bulk must te authorized by login, password and security token.

    .. code-block:: python

        bulk.login('username','pasword', 'security_token')

    .. note:: **SECURITY TOKEN**: Security token should be generated by web interface, in section: "My Settings" -> "Personal" -> "Reset My Security Token"

    .. warning:: **TEST ENVIRONMENT**: The test environment is running when you simply give the credentials to test account.

#. Create job.

    .. code-block:: python

        bulk.job_create(u'query', u'Contact')

#. Create batch.

    .. code-block:: python

        data = 'SELECT Id FROM Contact'
        bulk.batch_create(data)

#. Wait untill job finishes.

    .. code-block:: python

        while (not bulk.job_is_completed()):
            sleep(10)

#. Show batch status (optional).

    .. code-block:: python

        status = bulk.batch_status()

#. Show batch result (optional).

    .. code-block:: python

        result = bulk.batch_result()

#. Close job.

    .. code-block:: python

        bulk.job_close()
